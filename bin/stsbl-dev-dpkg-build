#!/bin/bash
set -e

get_distribution() {
  dpkg-parsechangelog | sed -n 's/^Distribution: //p'
}

get_version() {
  dpkg-parsechangelog | sed -n 's/^Version: //p'
}


if [ -f "/etc/stsbl/devtools/dpkg-build" ]
then
  . /etc/stsbl/devtools/dpkg-build
fi

export LC_MESSAGES=C

while getopts "dhnr:" option
do
  case $option in
    (d) USE_DDIFF=no
    ;;
    (n) NATIVE=yes
    ;;
    (r) RELEASE="$OPTARG"
    ;;
    (h) cat <<EOUSAGE ; exit 0;;
Usage: $(basename $0) [options]
Options
  -d     do not start ddiff after package build
  -n     package is a native package without revision
  -h     show this help
EOUSAGE
  esac
done

DISTRO="$(get_distribution)"
if [ "$RELEASE" ]
then
  # bypass
  true
elif [[ "$DISTRO" ]]
then
  RELEASE="$DISTRO"
else
  RELEASE=unstable
fi

if [ "$NATIVE" ]
then
  # bypass
  true
elif [[ "$(get_version)" =~ /-/ ]]
then
  NATIVE=no
else
  NATIVE=yes
fi

USE_DDIFF=yes


ADDITIONALBINARYPACKAGES="$(awk '$1 == "Package:" { print $2 }' debian/control)"
PACKAGE="$(dpkg-parsechangelog | awk '$1 == "Source:" { print $2 }')"
VERSION="$(dpkg-parsechangelog | awk '$1 == "Version:" { print $2 }')"
UPSTREAMVERSION=${VERSION%-*}

REVISION="-${VERSION#*-}"
PLAINREVISION="${VERSION#*-}"

if [ "$NATIVE" = "yes" ]
then
  REVISION=
  PLAINREVISION=
fi


debuild $DEBUILDARGS

if [ ! -e "/root/$PACKAGE/$UPSTREAMVERSION/$PLAINREVISION" ]
then
  mkdir -pv /root/package-pool/"$PACKAGE"/"$UPSTREAMVERSION"/"$PLAINREVISION"
fi

FILES=(../"${PACKAGE}_${UPSTREAMVERSION}${REVISION}_amd64.buildinfo" ../"${PACKAGE}_${UPSTREAMVERSION}${REVISION}_amd64.changes" ../"${PACKAGE}_${UPSTREAMVERSION}${REVISION}.debian.tar.xz" ../"${PACKAGE}_${UPSTREAMVERSION}${REVISION}.dsc" ../"${PACKAGE}_$UPSTREAMVERSION.orig.tar.gz" ../"${PACKAGE}_${UPSTREAMVERSION}${REVISION}_"*".deb" ../"${PACKAGE}_$UPSTREAMVERSION.git" ../"${PACKAGE}_$UPSTREAMVERSION$REVISION.git" ../"${PACKAGE}_$UPSTREAMVERSION.tar.xz")

for FILE in "${FILES[@]}"
do
  if [ -f "$FILE" ]
  then
    mv -v "$FILE" "/root/package-pool/$PACKAGE/$UPSTREAMVERSION/$PLAINREVISION/"
  fi
done

DDIFF=()
DDIFF+=(/root/package-pool/"$PACKAGE"/"$UPSTREAMVERSION"/"$PLAINREVISION"/"$PACKAGE"_"$UPSTREAMVERSION""$REVISION"_*.deb)

for i in $ADDITIONALBINARYPACKAGES
do
  if ! [ "$i" = "$PACKAGE" ]
  then
    mv -v ../"$i"_"$UPSTREAMVERSION""$REVISION"_*.deb /root/package-pool/"$PACKAGE"/"$UPSTREAMVERSION"/"$PLAINREVISION"/
    DDIFF+=(/root/package-pool/"$PACKAGE"/"$UPSTREAMVERSION"/"$PLAINREVISION"/"$i"_"$UPSTREAMVERSION""$REVISION"_*.deb)
  fi
done

debuild -- clean

if [ "$USE_DDIFF" = "yes" ]
then
  echo "Running ddiff ..."
  ${DDIFF_COMMAND:-ddiff} -a "${DDIFF[@]}" | vim -R -
fi

if [ -n "$RELEASE" ]
then
  for DEB in "${DDIFF[@]}"
  do
    mkdir -p -v "${COPY_BIN_TARGET_PATH:-/root/release}/$RELEASE"
    cp -a -v "$DEB" "${COPY_BIN_TARGET_PATH:-/root/release}/$RELEASE"
  done

  for SRC_FILE in "${PACKAGE}_${UPSTREAMVERSION}${REVISION}.debian.tar.xz" "${PACKAGE}_${UPSTREAMVERSION}${REVISION}.dsc" "${PACKAGE}_$UPSTREAMVERSION.orig.tar.gz" "${PACKAGE}_$UPSTREAMVERSION.git" "${PACKAGE}_$UPSTREAMVERSION$REVISION.git" "${PACKAGE}_$UPSTREAMVERSION.tar.xz"
  do
    if [ -f "/root/package-pool/$PACKAGE/$UPSTREAMVERSION/$PLAINREVISION/$SRC_FILE" ]
    then
      mkdir -p -v "${COPY_SRC_TARGET_PATH:-/root/release-src}/$RELEASE"
      cp -a -v "/root/package-pool/$PACKAGE/$UPSTREAMVERSION/$PLAINREVISION/$SRC_FILE" "${COPY_SRC_TARGET_PATH:-/root/release-src}/$RELEASE"
    fi
  done
fi
