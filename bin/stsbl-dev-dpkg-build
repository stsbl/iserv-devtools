#!/bin/bash
set -e

export LC_MESSAGES=C

NATIVE=no
USE_DDIFF=yes

while getopts "dhn" option
do
  case $option in
    (d) USE_DDIFF=no
    ;;
    (n) NATIVE=yes
    ;;
    (h) cat <<EOUSAGE ; exit 0;;
Usage: $(basename $0) [options]
Options
  -d     do not start ddiff after package build
  -n     package is a native package without revision
  -h     show this help
EOUSAGE
  esac
done

ADDITIONALBINARYPACKAGES=$(awk '$1 == "Package:" { print $2 }' debian/control)
PACKAGE=$(dpkg-parsechangelog | awk '$1 == "Source:" { print $2 }')
VERSION=$(dpkg-parsechangelog | awk '$1 == "Version:" { print $2 }')
UPSTREAMVERSION=${VERSION%-*}

REVISION="-"${VERSION#*-}
PLAINREVISION=${VERSION#*-}

if [ "$NATIVE" = "yes" ]
then
  REVISION=
  PLAINREVISION=
fi

if [ ! -e "/root/$PACKAGE/$UPSTREAMVERSION/$PLAINREVISION" ]
then
  mkdir -pv /root/package-pool/"$PACKAGE"/"$UPSTREAMVERSION"/"$PLAINREVISION"
fi

FILES=("${PACAKGE}_${UPSTREAMVERSION}${REVISION}_amd64.buildinfo" "${PACKAGE}_${UPSTREAMVERSION}${REVISION}_amd64.changes" "${PACKAGE}_${UPSTREAMVERSION}${REVISION}.debian.tar.xz" "${PACKAGE}_${UPSTREAMVERSION}${REVISION}.dsc" "${PACKAGE}_$UPSTREAMVERSION.orig.tar.gz" "${PACKAGE}_${UPSTREAMVERSION}${REVISION}_all.deb" "${PACKAGE}_$UPSTREAMVERSION.git"  "${PACKAGE}_$UPSTREAMVERSION.tar.xz")

for FILE in "${FILES[@]}"
do

  # create destionations
  if [ ! -e "/root/package-pool/$PACKAGE/$UPSTREAMVERSION/$PLAINREVISION/$FILE" ]
  then
    touch "/root/package-pool/$PACKAGE/$UPSTREAMVERSION/$PLAINREVISION/$FILE"
  fi

  # link files
  if [ -e "../$FILE" ] && [ -L "../$FILE" ]
  then
    rm -f "../$FILE"
  elif [ -e "../$FILE" ] && [ ! -L "../$FILE" ]
  then
    mv -v "../$FILE" "/root/package-pool/$PACKAGE/$UPSTREAMVERSION/$PLAINREVISION/$FILE"
  fi

  # link destinations
  ln -sfv "/root/package-pool/$PACKAGE/$UPSTREAMVERSION/$PLAINREVISION/$FILE" "../$FILE"
done

DDIFF=()
DDIFF+=(/root/package-pool/"$PACKAGE"/"$UPSTREAMVERSION"/"$PLAINREVISION"/"$PACKAGE"_"$UPSTREAMVERSION""$REVISION"_all.deb)

for i in $ADDITIONALBINARYPACKAGES
do
  if ! [ "$i" = "$PACKAGE" ]
  then
    # link deb file
    if [ -e "../""$i""_""$UPSTREAMVERSION""$REVISION""_all.deb" ] && [ -L "../""$i""_""$UPSTREAMVERSION""$REVISION""_all.deb" ]
    then
      rm -f ../"$i"_"$UPSTREAMVERSION""$REVISION"_all.deb
    elif [ -e "/root/""$i""_""$UPSTREAMVERSION""$REVISION""_all.deb" ] && [ ! -L "../$i""_""$UPSTREAMVERSION""$REVISION""_all.deb" ]
    then
      echo "Destination .deb exists and is not a symbolic link! Terminating!" >&2
      exit 1
    fi

    if [ ! -e "/root/package-pool/""$PACKAGE""/""$UPSTREAMVERSION""/""$PLAINREVISION""/""$i""_""$UPSTREAMVERSION""$REVISION""_all.deb" ]
    then
      touch /root/package-pool/"$PACKAGE"/"$UPSTREAMVERSION"/"$PLAINREVISION"/"$i"_"$UPSTREAMVERSION""$REVISION"_all.deb
    fi

    DDIFF+=(/root/package-pool/"$PACKAGE"/"$UPSTREAMVERSION"/"$PLAINREVISION"/"$i"_"$UPSTREAMVERSION""$REVISION"_all.deb)
    ln -sfv /root/package-pool/"$PACKAGE"/"$UPSTREAMVERSION"/"$PLAINREVISION"/"$i"_"$UPSTREAMVERSION""$REVISION"_all.deb ../"$i"_"$UPSTREAMVERSION""$REVISION"_all.deb
  fi
done

debuild $DEBUILDARGS

# remove links
for FILE in "${FILES[@]}"
do
  rm -f "../$FILE"
done

for i in $ADDITIONALBINARYPACKAGES
do
  rm -f ../"$i"_"$UPSTREAMVERSION""$REVISION"_all.deb
done

debuild -- clean

if [ "$USE_DDIFF" = "yes" ]
then
  echo "Updating package list ..."
  apt update || true
  echo "Running ddiff ..."
  ddiff -a "${DDIFF[@]}" | vim -R -
fi
